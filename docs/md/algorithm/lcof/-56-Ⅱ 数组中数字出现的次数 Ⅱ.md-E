[剑指 Offer 57. 和为s的两个数字](https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/)

**解题思路：**

可以使用双指针来解决。

**函数：**

- **初始条件：**双指针 `i` 和 `j`。
- **循环检查**：当 `i >= j` 时，退出循环
  1. 如果 `nums[i] + nums[j] ==  target` ，则可以直接返回数对 `nums[i]、nums[j]`；
  2. 如果 `nums[i] + nums[j] > target`，说明需要减小 `j`，`j` 自减；
  3. 如果 `nums[i] + nums[j] < target`，说明需要增大 `i`，`i` 自增。

**代码：**

```java
public int[] twoSum(int[] nums, int target) {
    if (nums == null || nums.length < 2) {
        return new int[0];
    }
    int start = 0;
    int end = nums.length - 1;
    while (start < end) {
        if (nums[start] + nums[end] == target) {
            return new int[]{nums[start], nums[end]};
        } else if (nums[start] + nums[end] > target) {
            end--;
        } else {
            start++;
        }
    }
    return new int[0];
}
```

**复杂度分析**

- **时间复杂度$O(N)$**：线性遍历整个数组，共 $N$ 个元素。
- **空间复杂度$O(1)$**：辅助变量占用常数大小的额外空间。