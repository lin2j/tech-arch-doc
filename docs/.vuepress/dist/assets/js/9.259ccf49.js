(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{282:function(e,_,t){"use strict";t.r(_);var o=t(10),n=Object(o.a)({},(function(){var e=this,_=e._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[_("strong",[e._v("Code Glance Pro")]),e._v(" 是一个用于在侧边栏展示文件整体内容的插件，类似于 Sublime 中的 minimap。")]),e._v(" "),_("p",[e._v("通过它可以快速在文件的头部、尾部、中间部分进行跳转。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://www.lin2j.tech/blog-image/intellij-recommoned/code_glance_pro.png",alt:"code_glance_pro"}})]),e._v(" "),_("p",[e._v("Code Glance Pro 是 Code Glance 增强版，它拥有以下的特性：")]),e._v(" "),_("ul",[_("li",[e._v("右击 minimap 可以进行快速配置。")]),e._v(" "),_("li",[e._v("支持高亮 Error、版本控制、符号、光标停留的单词。")]),e._v(" "),_("li",[e._v("minimap 的颜色与当前主题保持一致。")]),e._v(" "),_("li",[e._v("显示文件内容的整体结构。")]),e._v(" "),_("li",[e._v("在文件分屏的情况下自动计算 minimap 的宽度。")])]),e._v(" "),_("p",[e._v("下面是效果图，不同的特性用不同的颜色进行了描述。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://www.lin2j.tech/blog-image/intellij-recommoned/code_glance_pro_features.png",alt:"code_glance_pro_features"}})]),e._v(" "),_("p",[e._v("除此之外，Code Glance Pro 还支持进行设置以达到自己想要的效果，可以到 "),_("code",[e._v("Other Settings/CodeGlance Pro")]),e._v("自行设置。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://www.lin2j.tech/blog-image/intellij-recommoned/code_glance_pro_settings.png",alt:"code_glance_pro_settings"}})]),e._v(" "),_("p",[e._v("对于渲染模式，下面是两种渲染模式的对比，个人觉得 "),_("code",[e._v("Clean")]),e._v(" 模式看起来舒服些。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://www.lin2j.tech/blog-image/intellij-recommoned/code_glance_pro_render_mode.png",alt:"code_glance_pro_render_mode"}})]),e._v(" "),_("p",[e._v("最后，个人觉得对我最有用的是 Error 的位置高亮，光标跳转我是通过 ideaVim 插件进行跳转的。")]),e._v(" "),_("p",[e._v("但是对于没有 Vim 使用习惯的开发，我觉得这个插件可以提高一丢丢开发效率吧。")])])}),[],!1,null,null,null);_.default=n.exports}}]);